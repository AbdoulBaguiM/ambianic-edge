name: Ambianic Edge CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_x86:
    # Skip build if the commit message includes the string '[skip ci]'
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}      
      - name: Run build script
        env:
          ARCH: "linux/amd64"
          TAG_SUFFIX: "amd64"
        run: |
          pwd
          ls -al
          echo GITHUB_WORKSPACE=${GITHUB_WORKSPACE}
          echo "ARCH=${ARCH}"
          echo "TAG_SUFFIX=${TAG_SUFFIX}"
          ${GITHUB_WORKSPACE}/build/ci-build-job.sh
  build_arm:
    # Skip build if the commit message includes the string '[skip ci]'
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}      
      - name: Run build script
        env:
          ARCH: "linux/arm/v7"
          TAG_SUFFIX: "arm32v7"
        run: |
          echo "ARCH=${ARCH}"
          ${GITHUB_WORKSPACE}/build/ci-build-job.sh
  release:
    needs: [build_x86, build_arm]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
    - name: Semantic Release
      id: semrel
      uses: cycjimmy/semantic-release-action@v2
      with:
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
          @semantic-release/exec
        branches: |
          [
            'main',
          ]
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Log new release info
      if: steps.semrel.outputs.new_release_published == 'true'
      run: |
        echo ${{ steps.semrel.outputs.new_release_version }}
        echo ${{ steps.semrel.outputs.new_release_major_version }}
        echo ${{ steps.semrel.outputs.new_release_minor_version }}
        echo ${{ steps.semrel.outputs.new_release_patch_version }}