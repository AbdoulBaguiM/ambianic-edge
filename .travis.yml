language: python
sudo: required
services:
  - docker
matrix:
  fast_finish: true
  include:
    - env: ARCH=linux/amd64
    - env: ARCH=linux/arm64
    - env: ARCH=linux/arm/v7
addons:
  apt:
    packages:
      - docker-ce
before_install:
#  - python --version
# command to install dependencies
install:
  - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
  - sudo service docker restart
  - docker --version
  - docker buildx --help
  #- cd ${TRAVIS_BUILD_DIR}/build
  # - ./ambianic-build.sh
  - pip3 install -U codecov
# command to run tests
script:
  # Raspberry PI section
  # prepare qemu
  - TAG=dev-${ARCH}
  - docker run --rm --privileged docker/binfmt:820fdd95a9972a5308930a2bdfb8573dd4447ad3
  - cat /proc/sys/fs/binfmt_misc/qemu-aarch64
  - docker buildx create --name mybuilder
  - docker buildx use mybuilder
  - docker buildx inspect --bootstrap
  - cd ${TRAVIS_BUILD_DIR}/build
  - docker buildx build -f Dev.Dockerfile --platform ${ARCH} -t ambianic/ambianic:dev .
  # setup ARM CPU (raspberry pi) build support
  #- >
#      if [ "$ARCH" == "arm" ]; then
#        sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
#        docker run --rm --privileged multiarch/qemu-user-static:register --reset
#      fi
  # build image
#  - sudo docker build -f Dev.Dockerfile --platform $ARCH -t ambianic/ambianic:dev --build-arg ARCH=$ARCH .
  # test image
#  - sudo docker run ambianic/ambianic --version
#      docker tag ambianic/ambianic ambianic/ambianic:$TAG
#      docker push ambianic/ambianic:$TAG
#      docker push ambianic/ambianic
  - docker images
  - cd $TRAVIS_BUILD_DIR/build
  - ./ambianic-test.sh
  # push image
  - >
    if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
      docker buildx build --platform ${ARCH} --push -t ambianic/ambianic:dev .
      if [ "$ARCH" == "linux/amd64"]; then
        ./ambianic-docs.sh
      fi
    fi
  - echo $PWD
  - cd $TRAVIS_BUILD_DIR
  - ls -al
after_success:
  - codecov # submit code coverage
deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
  keep_history: true
  local_dir: docs/site
  on:
    branch: master
